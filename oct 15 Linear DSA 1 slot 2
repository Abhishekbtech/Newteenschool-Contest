Zero grid
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc = new Scanner(System.in);
        int ones = 0;
        for(int i =0; i <2; i++){
            for(int j=0;j<2;j++){
                int num = sc.nextInt();
                if(num==1){
                    ones++;
                }
            }
        }
       
        if(ones == 0){ // all everything is zero
            System.out.println(0);
        }else if (ones<=3){
            System.out.println(1);
        }else{
            System.out.println(2);
        }
    }
}



Beautiful Fork
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        for(int i=1; i<=T; i++){
            int x = sc.nextInt();
            int y = sc.nextInt();
            int a = sc.nextInt();
            int b = sc.nextInt();

            if ((Math.abs(x - a) == 2 && Math.abs(y - b) == 1) || (Math.abs(x - a) == 1 && Math.abs(y - b) == 2)) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }
    }
}



Tarun's Homework
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        String S  = sc.next();
        int N = S.length();

        String S1 = "aba";
        int M = S1.length();

        int res = 0;
        for(int i=0; i<=N-M; i++){
            int j;
            for(j=0; j<M; j++){
                if(S.charAt(i+j) != S1.charAt(j)){
                    break;
                }
            }

            if(j == M){
                res++;
                j=0;
            }
        }

        String S2 = "abc";
        for(int i=0; i<=N-M; i++){
            int j;
            for(j=0; j<M; j++){
                if(S.charAt(i+j) != S2.charAt(j)){
                    break;
                }
            }
            if(j==M){
                res++;
                j=0;
            }
        }
        System.out.println(res);
    }
}



Find Indices
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();

        int [] a = new int[N];
        for(int i=0; i<N; i++){
            a[i] = sc.nextInt();
            if(a[i] == X){
                System.out.print(i + " ");
            }
        }
    }
}



Division Barrier
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc =new Scanner(System.in);
        int n =sc.nextInt();
        int []nums = new int[n];
        for(int i=0; i<n; i++){
            nums[i] = sc.nextInt();
        }
        int barrier = sc.nextInt();

        System.out.println(findDivisor(nums, barrier));
    }

    public static int findDivisor(int [] nums, int barrier){
        int left = 1, right = 1000000000;
        while(left < right){
            int mid = left + (right -left) / 2;
            if(check(nums, mid, barrier)){
                right = mid; 
            }else{
                left = mid +1;
            }
        }
        return left;
    }

    public static boolean check(int[] nums, int divisor, int barrier){
        int sum = 0;
        for(int num : nums){
            sum += Math.ceil((double) num / divisor);
            if(sum > barrier){
                return false;
            }
        }
        return true;
    }
}
