Arranging Coins
class Solution {
    public int arrangeCoins(int n) {
        // enter your code.
        return (int) (Math.sqrt(1 + 8L * n) -1)/2;
    }
}



ABC? (Contest)
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        for(int n=1; n<=N; n++){
            int count = countTriplets(n);
            System.out.println(count);
        }
    }

    public static int countTriplets(int n){
        int count = 0;
        for(int a = 0; a * a <= n; a++){
            for(int b = 0; b * b <= n; b++){
                int cSquared = n - a * a - b * b;
                int c = (int) Math.sqrt(cSquared);

                if(c >= 0 && a * a + b * b + c * c == n){
                    count++;
                }
            }
        }
        return count;
    }
}


Array construction
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int []value = new int[n];
        int []frequency = new int[n];
        for(int i=0; i<n; i++){
            value[i] = sc.nextInt();
        }

        for(int i=0; i<n; i++){
            frequency[i] =sc.nextInt();
        }

        int k = sc.nextInt();
    
        TreeMap<Integer, Integer> frequencyMap = new TreeMap<>();
        for(int i=0; i<n; i++){
            frequencyMap.put(value[i], frequencyMap.getOrDefault(value[i], 0) + frequency[i]);
        }

        int result =0;
        int count =0;

        for(Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()){
            count += entry.getValue();
            if(count >= k){
                result = entry.getKey();
                break;
            }
        }
        System.out.println(result);
    }
}


Anti clockwise
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    static void printAntiClockwise(int[][] matrix, int n) {

        for(int i=0; i<n/2; i++){
            for(int j=i; j<n-i; j++){
                System.out.print(matrix[j][i] + " ");
            }
            for(int j=i+1; j<n-i; j++){
                System.out.print(matrix[n-i-1][j] +" ");
            }
            for(int j=n-i-2; j>=i; j--){
                System.out.print(matrix[j][n-i-1] + " ");
            }
            for(int j=n-i-2; j>i; j--){
                System.out.print(matrix[i][j]+ " ");
            }
        }

        if(n%2 == 1){
            System.out.print(matrix[n/2][n/2]+ " ");
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] matrix = new int[n][n];
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                matrix[i][j] = sc.nextInt();
            }
        }
        printAntiClockwise(matrix, n);
    }
}
