Remove zeroes
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

 class Main {
    public static int binaryToDecimal(String binaryString) {
        String binaryWithoutZeros = binaryString.replaceAll("0", "");
        int decimalValue = Integer.parseInt(binaryWithoutZeros, 2);
        return decimalValue;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String binaryString = scanner.next();
        int decimalValue = binaryToDecimal(binaryString);
        System.out.println(decimalValue);
    }
}



Flips (Contest)
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        int flips = 0;
        String vowels = "aeiou";

        for (int i = 0; i < S.length(); i++) {
            char current = S.charAt(i);
            if (vowels.indexOf(current) != -1 || (current >= '1' && current <= '9' && (current - '0') % 2 == 1)) {
                flips++;
            }
        }
        System.out.println(flips);
    }
}




Merge Lists(Contest)
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
import java.util.ArrayList;


 class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();

        ArrayList<Integer> arr1 = new ArrayList<>();
        ArrayList<Integer> arr2 = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            arr1.add(scanner.nextInt());
        }

        for (int i = 0; i < m; i++) {
            arr2.add(scanner.nextInt());
        }

        int ind = scanner.nextInt();

        arr1.addAll(ind, arr2);
        for (int num : arr1) {
            System.out.print(num + " ");
        }
    }
}




Candies and chocolates (Contest)
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
       Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int c = 0, t = 0;
        for(int i=0; i<s.length(); i++){
            if(s.charAt(i)=='F'){
                if(i-c<=t && t!=0){
                    t++;
                }
                else{
                    t=i-c;
                }   
                c++; 
            }
        }
        System.out.println(t);
    }
}



Element position
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int []arr = new int[n];
        for(int i =0;i<n;i++){
           arr[i]=sc.nextInt();
        }
        int k =sc.nextInt();
        
        int ans = -1;
        for(int i=0;i<n;i++){
            if(arr[i]==k){
                ans=i;
                break;
            }
        }
        System.out.println(ans);
    }
}




String rearrange (Contest)
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
       Scanner inputTaker = new Scanner(System.in);
        String str = inputTaker.next();
        int a = 0, b = 0, c = 0, d = 0;
        for (int i = 0; i < str.length(); i++) 
        {
            if (str.charAt(i) == 'a') 
            {
                a++;
            } 
            else if (str.charAt(i) == 'b') 
            {
                b++;
            }
            else if (str.charAt(i) == 'c') 
            {
                c++;
            }
            else if (str.charAt(i) == 'd') 
            {
                d++;
            }
        }
        int minBCD = Math.min(b, c);
        int res = 0;
        minBCD = Math.min(minBCD, d);
        if (a > minBCD) 
        {
            res = minBCD;
        }
        else 
        {
            while (minBCD >= a && minBCD > 0) 
            {
                minBCD--;
            }
            res = minBCD;
        }
        System.out.print(res);
    }
}



Divisibility Test
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed


 class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String numberStr = scanner.nextLine();
        
        String result = isDivisibleBy30(numberStr);
        System.out.println(result);
    }
    
    public static String isDivisibleBy30(String numberStr) {
        int digitSum = 0;
        for (char c : numberStr.toCharArray()) {
            int digit = Character.getNumericValue(c);
            digitSum += digit;
        }
        
        if (digitSum % 3 != 0) {
            return "No";
        }
        
        char lastDigit = numberStr.charAt(numberStr.length() - 1);
        if (lastDigit == '0' || lastDigit == '5') {
            return "Yes";
        } else {
            return "No";
        }
    }
}



Simple Numbers I
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed


 class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        String result = isAwesome(N);
        System.out.println(result);
    }

    public static String isAwesome(int N) {
        String numStr = String.valueOf(N);
        int count = 1;

        for (int i = 1; i < numStr.length(); i++) {
            char currentDigit = numStr.charAt(i);
            char prevDigit = numStr.charAt(i - 1);

            if (currentDigit == prevDigit) {
                count++;
                if (count >= 3) {
                    return "Awesome";
                }
            } else {
                count = 1; 
            }
        }

        return "Good";
    }
}
